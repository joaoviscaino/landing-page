body {
    padding: 0; margin : 0;
    display: flex;
    flex-direction: column; /* this means that I will need wrapper divs within each section's divs
                                 if I want to use flex-direction and flex-basis differently within each section */
}
/* unless specified, just set every text to this color */
body p, h1{
    color: #1F2937;
}

header {
    display: flex;
    justify-content: space-around;
    align-items: center;
    height: 5vh;
    color: #E5E7EB;
    font-size: 1.15rem;
}

header ul {
    display: flex;
    list-style-type: none;
    padding: 0px;
    gap: 1.15rem;
}

header p {
    color: #F9FAF8;
    font-size: 1.4rem;
}

header,
.section-1, footer{
    background-color: #1F2937;
}

.section-1 {
    display: flex;
    overflow: auto;
    box-sizing: border-box;
    justify-content: center;
    align-items: center;   
    height: 80vh;
}

/* so that image height would resize to fit the text container */
.section-1-wrap {
    display: flex;
    flex-wrap: nowrap;
    flex-direction: row;
    flex-basis: 65%;
    height: 50%;
}

.section-1 .text-container {
    display: flex;
    /* Using flex: 1 will make it so adding padding-right would resize the image container. 
    It sets flex-basis to auto, meaning that the box can still resize to accomodate the padding, 
    despite the other flex item within the wrapper also having the same property of flex: 1 
        Apparently, flex sizing algorithms do not account for padding, hence the problem when adding them without 
        a hard constraint like width: 50% */
    width: 50%; 
    flex-direction: column;
    box-sizing: border-box;
    justify-content: space-between;
    flex-wrap: nowrap; /* SO text can go down  */
    padding-right: 5vh; 
    gap: 1rem;
}

.section-1 button {
    height: 10%;
    width: 12.5vh;
    flex-shrink: 0; /* this is important here */
    flex-wrap: nowrap;  /* I like it when buttons don't wrap text in 2 different lines. */
    background-color: #3882F6;
    color: #F9FAF8;
    border-radius: 7.5px;
    border: none;
    font-weight: 900;
}

/* h1 from section 1 within text-container */
.section-1 h1 {
    font-size: 3rem;
    color: #F9FAF8;
    font-weight: 900;
    margin: 0; /* this is important */
}

.section-1 p {
    font-size: 1.5rem;
    color: #E5E7EB;
}

.section-1 .image-containerr {
    padding: 0px;
    flex: 1;
    overflow: hidden; /* makes image not resize, maintaining a good resolution. */
    background-color: #3b4042;
}

.section-1 .image-containerr img {
    width: 100%;
    resize: none;
}

/* Section 2's is part of a vertical cross-axis from the Body container */
.section-2 {
    display: flex;
    align-items: center; /* horizontal */
    justify-content: start;  /* vertical */
    flex-direction: column; /* this means images-row's flex-basis sets height */
    height: 70vh; /* hard contraint works better here */
    padding-top: 5vh;
    gap: 3.5vh;
}

.section-2 .images-row {
    display: flex;
    flex-direction: row;
    justify-content: center; /* x-axis, horizontal */
    align-items: center; /* y-axis, vertical */
    width: 60%;
    box-sizing: border-box;
    height: 60%; /* maintain the same, flex-basis would make it funky */
    overflow: hidden;
    gap: 2vw;
    padding: 16px
}

/* Having a container makes it easier to accomodate images */
.section-2 .image-container {
    display: flex;
    box-sizing: border-box;
    max-width: 25%; /* width should be set by a hard constraint here */
    height: 100%;
    justify-content: center;
    align-items: center;
    flex-direction: column; /* this is important. Although obvious, I was dumb enough to overlook this */
    gap: 2vh;
    overflow: scroll;
}

.section-2 img {
    width: 100%;
    box-sizing: border-box; /* this was necessary in order for the border not to be part of the overflow */
    border-radius: 5%;
    border: 4px solid #75adfa;
}

.section-2 p {
    width: 80%;
    font-size: 1.5rem;
}

.section-3 {
    display: flex;
    /* since there's only a single wrapper container here, just use default flex direction */
    height: 60vh;
    justify-content: center;
    align-items: center;
    background-color: #E5E7EB;
}

/* this guy's flex-direction matters more */
.section-3-wrapper {
    display: flex;
    justify-content: center;
    flex-direction: column;
    flex-basis: 70%;
    flex-wrap: wrap;
}

#quote {
    display: block;
    width: 100%;
    font-size: 2.5rem; /* good idea to use rem for text. 36px sounds too specific */
    font-style: italic;
    font-weight: 100;
}

#author {
    display: block;
    margin: 0px;
    align-self: end; /* to make author move to the end of the wrapper */
    margin-right: 3rem; /* minor styling detail */
    font-size: 1.5rem;
}

.section-4 {
    display: flex;
    /* since there's only a single wrapper container here, just use default flex direction */
    height: 50vh;
    justify-content: center;
    align-items: center;
}

.section-4.wrapper {
    display: flex;
    background-color: #3882F6;
    height: 50%;
    border-radius: 5px;
    flex-basis: 70%;
    justify-content: space-around;
}

.section-4.text-container {
    display: flex;
    flex-direction: column;
    align-items: start; /* horizontal placement */
}

.section-4 h1, p {
    margin: 0px; /* annoyingly necessary in this case */
}

.section-4 p {  
    color: #E5E7EB;
    font-size: 1.3rem;
}

.section-4 h1 {
    color: #f9f9f9;
    font-size: 2.5rem;
}

.section-4 button {
    background-color: #3882F6;
    border: solid 1.5px #F9FAF8;
    border-radius: 7.5px;
    font-size: 1rem;
    font-weight: 900;
    color: #F9FAF8;
    width: 14vh;
    height: 4vh;
    flex-shrink: 0;
}

footer {
    display: flex;
    height: 10vh;
    color: #E5E7EB;
    justify-content: center;
    align-items: center;
}
